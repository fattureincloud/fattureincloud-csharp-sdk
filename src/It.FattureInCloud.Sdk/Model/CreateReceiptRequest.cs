/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.16
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


namespace It.FattureInCloud.Sdk.Model
{
    /// <summary>
    ///     CreateReceiptRequest
    /// </summary>
    [DataContract(Name = "CreateReceiptRequest")]
    public class CreateReceiptRequest : IEquatable<CreateReceiptRequest>, IValidatableObject
    {
        private bool? _AutocompleteNumber;
        private Receipt _Data;
        private bool _flagAutocompleteNumber;
        private bool _flagData;

        /// <summary>
        ///     Initializes a new instance of the <see cref="CreateReceiptRequest" /> class.
        /// </summary>
        /// <param name="data">data.</param>
        /// <param name="autocompleteNumber">If true, the number is autocompleted progressively..</param>
        public CreateReceiptRequest(Receipt data = default, bool? autocompleteNumber = default(bool?))
        {
            _Data = data;
            if (Data != null) _flagData = true;
            _AutocompleteNumber = autocompleteNumber;
            if (AutocompleteNumber != null) _flagAutocompleteNumber = true;
        }

        /// <summary>
        ///     Gets or Sets Data
        /// </summary>
        [DataMember(Name = "data", EmitDefaultValue = false)]
        public Receipt Data
        {
            get => _Data;
            set
            {
                _Data = value;
                _flagData = true;
            }
        }

        /// <summary>
        ///     If true, the number is autocompleted progressively.
        /// </summary>
        /// <value>If true, the number is autocompleted progressively.</value>
        [DataMember(Name = "autocomplete_number", EmitDefaultValue = true)]
        public bool? AutocompleteNumber
        {
            get => _AutocompleteNumber;
            set
            {
                _AutocompleteNumber = value;
                _flagAutocompleteNumber = true;
            }
        }

        /// <summary>
        ///     Returns false as Data should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeData()
        {
            return _flagData;
        }

        /// <summary>
        ///     Returns false as AutocompleteNumber should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAutocompleteNumber()
        {
            return _flagAutocompleteNumber;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateReceiptRequest {\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  AutocompleteNumber: ").Append(AutocompleteNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as CreateReceiptRequest);
        }

        /// <summary>
        ///     Returns true if CreateReceiptRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateReceiptRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateReceiptRequest input)
        {
            if (input == null) return false;
            return
                (
                    Data == input.Data ||
                    (Data != null &&
                     Data.Equals(input.Data))
                ) &&
                (
                    AutocompleteNumber == input.AutocompleteNumber ||
                    (AutocompleteNumber != null &&
                     AutocompleteNumber.Equals(input.AutocompleteNumber))
                );
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (Data != null) hashCode = hashCode * 59 + Data.GetHashCode();
                if (AutocompleteNumber != null) hashCode = hashCode * 59 + AutocompleteNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(
            ValidationContext validationContext)
        {
            yield break;
        }
    }
}