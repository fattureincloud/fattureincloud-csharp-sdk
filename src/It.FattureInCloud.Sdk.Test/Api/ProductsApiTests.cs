/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ProductsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProductsApiTests : IDisposable
    {
        private ProductsApi instance;

        public ProductsApiTests()
        {
            instance = new ProductsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProductsApi
            //Assert.IsType<ProductsApi>(instance);
        }

        /// <summary>
        /// Test CreateProduct
        /// </summary>
        [Fact]
        public void CreateProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //CreateProductRequest createProductRequest = null;
            //var response = instance.CreateProduct(companyId, createProductRequest);
            //Assert.IsType<CreateProductResponse>(response);
        }

        /// <summary>
        /// Test DeleteProduct
        /// </summary>
        [Fact]
        public void DeleteProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int productId = null;
            //instance.DeleteProduct(companyId, productId);
        }

        /// <summary>
        /// Test GetProduct
        /// </summary>
        [Fact]
        public void GetProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int productId = null;
            //string fields = null;
            //string fieldset = null;
            //var response = instance.GetProduct(companyId, productId, fields, fieldset);
            //Assert.IsType<GetProductResponse>(response);
        }

        /// <summary>
        /// Test ListProducts
        /// </summary>
        [Fact]
        public void ListProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string fields = null;
            //string fieldset = null;
            //string sort = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListProducts(companyId, fields, fieldset, sort, page, perPage);
            //Assert.IsType<ListProductsResponse>(response);
        }

        /// <summary>
        /// Test ModifyProduct
        /// </summary>
        [Fact]
        public void ModifyProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int productId = null;
            //ModifyProductRequest modifyProductRequest = null;
            //var response = instance.ModifyProduct(companyId, productId, modifyProductRequest);
            //Assert.IsType<ModifyProductResponse>(response);
        }
    }
}
