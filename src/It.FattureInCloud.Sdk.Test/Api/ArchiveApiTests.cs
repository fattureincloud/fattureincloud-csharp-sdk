/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ArchiveApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ArchiveApiTests : IDisposable
    {
        private ArchiveApi instance;

        public ArchiveApiTests()
        {
            instance = new ArchiveApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ArchiveApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ArchiveApi
            //Assert.IsType<ArchiveApi>(instance);
        }

        /// <summary>
        /// Test CreateArchiveDocument
        /// </summary>
        [Fact]
        public void CreateArchiveDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //CreateArchiveDocumentRequest createArchiveDocumentRequest = null;
            //var response = instance.CreateArchiveDocument(companyId, createArchiveDocumentRequest);
            //Assert.IsType<CreateArchiveDocumentResponse>(response);
        }

        /// <summary>
        /// Test DeleteArchiveDocument
        /// </summary>
        [Fact]
        public void DeleteArchiveDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //instance.DeleteArchiveDocument(companyId, documentId);
        }

        /// <summary>
        /// Test GetArchiveDocument
        /// </summary>
        [Fact]
        public void GetArchiveDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //string fields = null;
            //string fieldset = null;
            //var response = instance.GetArchiveDocument(companyId, documentId, fields, fieldset);
            //Assert.IsType<GetArchiveDocumentResponse>(response);
        }

        /// <summary>
        /// Test ListArchiveDocuments
        /// </summary>
        [Fact]
        public void ListArchiveDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string fields = null;
            //string fieldset = null;
            //string sort = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListArchiveDocuments(companyId, fields, fieldset, sort, page, perPage);
            //Assert.IsType<ListArchiveDocumentsResponse>(response);
        }

        /// <summary>
        /// Test ModifyArchiveDocument
        /// </summary>
        [Fact]
        public void ModifyArchiveDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //ModifyArchiveDocumentRequest modifyArchiveDocumentRequest = null;
            //var response = instance.ModifyArchiveDocument(companyId, documentId, modifyArchiveDocumentRequest);
            //Assert.IsType<ModifyArchiveDocumentResponse>(response);
        }

        /// <summary>
        /// Test UploadArchiveDocumentAttachment
        /// </summary>
        [Fact]
        public void UploadArchiveDocumentAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string filename = null;
            //System.IO.Stream attachment = null;
            //var response = instance.UploadArchiveDocumentAttachment(companyId, filename, attachment);
            //Assert.IsType<UploadArchiveAttachmentResponse>(response);
        }
    }
}
