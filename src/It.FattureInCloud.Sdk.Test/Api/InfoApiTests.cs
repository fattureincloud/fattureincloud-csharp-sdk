/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing InfoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InfoApiTests : IDisposable
    {
        private InfoApi instance;

        public InfoApiTests()
        {
            instance = new InfoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InfoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InfoApi
            //Assert.IsType<InfoApi>(instance);
        }

        /// <summary>
        /// Test ListArchiveCategories
        /// </summary>
        [Fact]
        public void ListArchiveCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //var response = instance.ListArchiveCategories(companyId);
            //Assert.IsType<ListArchiveCategoriesResponse>(response);
        }

        /// <summary>
        /// Test ListCities
        /// </summary>
        [Fact]
        public void ListCitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string postalCode = null;
            //string city = null;
            //var response = instance.ListCities(postalCode, city);
            //Assert.IsType<ListCitiesResponse>(response);
        }

        /// <summary>
        /// Test ListCostCenters
        /// </summary>
        [Fact]
        public void ListCostCentersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //var response = instance.ListCostCenters(companyId);
            //Assert.IsType<ListCostCentersResponse>(response);
        }

        /// <summary>
        /// Test ListCountries
        /// </summary>
        [Fact]
        public void ListCountriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListCountries();
            //Assert.IsType<ListCountriesResponse>(response);
        }

        /// <summary>
        /// Test ListCurrencies
        /// </summary>
        [Fact]
        public void ListCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListCurrencies();
            //Assert.IsType<ListCurrenciesResponse>(response);
        }

        /// <summary>
        /// Test ListDeliveryNotesDefaultCausals
        /// </summary>
        [Fact]
        public void ListDeliveryNotesDefaultCausalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListDeliveryNotesDefaultCausals();
            //Assert.IsType<ListDeliveryNotesDefaultCausalsResponse>(response);
        }

        /// <summary>
        /// Test ListLanguages
        /// </summary>
        [Fact]
        public void ListLanguagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListLanguages();
            //Assert.IsType<ListLanguagesResponse>(response);
        }

        /// <summary>
        /// Test ListPaymentAccounts
        /// </summary>
        [Fact]
        public void ListPaymentAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string fields = null;
            //string fieldset = null;
            //string sort = null;
            //var response = instance.ListPaymentAccounts(companyId, fields, fieldset, sort);
            //Assert.IsType<ListPaymentAccountsResponse>(response);
        }

        /// <summary>
        /// Test ListPaymentMethods
        /// </summary>
        [Fact]
        public void ListPaymentMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string fields = null;
            //string fieldset = null;
            //string sort = null;
            //var response = instance.ListPaymentMethods(companyId, fields, fieldset, sort);
            //Assert.IsType<ListPaymentMethodsResponse>(response);
        }

        /// <summary>
        /// Test ListProductCategories
        /// </summary>
        [Fact]
        public void ListProductCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string context = null;
            //var response = instance.ListProductCategories(companyId, context);
            //Assert.IsType<ListProductCategoriesResponse>(response);
        }

        /// <summary>
        /// Test ListReceivedDocumentCategories
        /// </summary>
        [Fact]
        public void ListReceivedDocumentCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //var response = instance.ListReceivedDocumentCategories(companyId);
            //Assert.IsType<ListReceivedDocumentCategoriesResponse>(response);
        }

        /// <summary>
        /// Test ListRevenueCenters
        /// </summary>
        [Fact]
        public void ListRevenueCentersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //var response = instance.ListRevenueCenters(companyId);
            //Assert.IsType<ListRevenueCentersResponse>(response);
        }

        /// <summary>
        /// Test ListTemplates
        /// </summary>
        [Fact]
        public void ListTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //bool? byType = null;
            //var response = instance.ListTemplates(type, byType);
            //Assert.IsType<ListTemplatesResponse>(response);
        }

        /// <summary>
        /// Test ListUnitsOfMeasure
        /// </summary>
        [Fact]
        public void ListUnitsOfMeasureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListUnitsOfMeasure();
            //Assert.IsType<ListUnitsOfMeasureResponse>(response);
        }

        /// <summary>
        /// Test ListVatTypes
        /// </summary>
        [Fact]
        public void ListVatTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string fieldset = null;
            //var response = instance.ListVatTypes(companyId, fieldset);
            //Assert.IsType<ListVatTypesResponse>(response);
        }
    }
}
