/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.5
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
using Moq;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing PriceListsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PriceListsApiTests : IDisposable
    {
        Mock<IPriceListsApi> instance = new Mock<IPriceListsApi>();
        string getPriceListsResponseBody;
        string getPriceListItemsResponseBody;

        public PriceListsApiTests()
        {
            getPriceListsResponseBody = "{ 'data': [ { 'id': '1', 'name': 'Listino di prova', 'currency': 'EUR', 'default': true, 'items_count': 2, 'created_at': '2021-10-10 10:10:10', 'updated_at': '2021-10-10 10:10:10' }, { 'id': '2', 'name': 'Listino di prova 2', 'currency': 'USD', 'default': false, 'items_count': 5, 'created_at': '2021-11-11 11:11:11', 'updated_at': '2021-11-11 11:11:11' } ] }";
            var getPriceListsResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<ListPriceListsResponse>(getPriceListsResponseBody);
            instance
                .Setup(p => p.GetPriceLists(Moq.It.IsAny<int>(), 0))
                .Returns(getPriceListsResponse);

            getPriceListItemsResponseBody = "{ 'data': [ { 'id': 12345, 'name': 'Prodotto A', 'code': 'PROD-A', 'price': 100.0, 'currency': 'EUR', 'tax_rate': 22.0, 'description': 'Descrizione del prodotto A', 'created_at': '2021-10-10 10:10:10', 'updated_at': '2021-10-10 10:10:10' }, { 'id': 12346, 'name': 'Prodotto B', 'code': 'PROD-B', 'price': 200.0, 'currency': 'EUR', 'tax_rate': 22.0, 'description': 'Descrizione del prodotto B', 'created_at': '2021-11-11 11:11:11', 'updated_at': '2021-11-11 11:11:11' } ] }";
            var getPriceListItemsResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<GetPriceListItemsResponse>(getPriceListItemsResponseBody);
            instance
                .Setup(p => p.GetPriceListItems(Moq.It.IsAny<int>(), Moq.It.IsAny<string>(), 0))
                .Returns(getPriceListItemsResponse);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PriceListsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsType<IPriceListsApi>(instance);
        }

        /// <summary>
        /// Test GetPriceListItems
        /// </summary>
        [Fact]
        public void GetPriceListItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string priceListId = null;
            //var response = instance.GetPriceListItems(companyId, priceListId);
            //Assert.IsType<GetPriceListItemsResponse>(response);
        }

        /// <summary>
        /// Test GetPriceLists
        /// </summary>
        [Fact]
        public void GetPriceListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //var response = instance.GetPriceLists(companyId);
            //Assert.IsType<ListPriceListsResponse>(response);
        }
    }
}
