/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.5
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
using Moq;
using It.FattureInCloud.Sdk.Model;
using Newtonsoft.Json.Linq;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing PriceListsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PriceListsApiTests : IDisposable
    {
        Mock<IPriceListsApi> instance = new Mock<IPriceListsApi>();
        string getPriceListsResponseBody;
        string getPriceListItemsResponseBody;

        public PriceListsApiTests()
        {
            getPriceListsResponseBody = "{'data':[{'id':'10','name':'Listino 1','prices_type':'net','is_default':true,'valid_from':'2023-01-01','valid_to':'2023-12-31','type':'sell'}]}";
            var getPriceListsResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<ListPriceListsResponse>(getPriceListsResponseBody);
            instance
                .Setup(p => p.GetPriceLists(Moq.It.IsAny<int>(), 0))
                .Returns(getPriceListsResponse);

            getPriceListItemsResponseBody = "{'data':{1:{'price':3.5}}}";
            var getPriceListItemsResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<GetPriceListItemsResponse>(getPriceListItemsResponseBody);
            instance
                .Setup(p => p.GetPriceListItems(Moq.It.IsAny<int>(), Moq.It.IsAny<string>(), 0))
                .Returns(getPriceListItemsResponse);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PriceListsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsType<Mock<IPriceListsApi>>(instance);
        }

        /// <summary>
        /// Test GetPriceListItems
        /// </summary>
        [Fact]
        public void GetPriceListItemsTest()
        {
            int companyId = 2;
            string priceListId = "10";
            var response = instance.Object.GetPriceListItems(companyId, priceListId);
            JObject obj = JObject.Parse(getPriceListItemsResponseBody);

            Assert.True(JToken.DeepEquals(obj, JObject.FromObject(response)));
        }

        /// <summary>
        /// Test GetPriceLists
        /// </summary>
        [Fact]
        public void GetPriceListsTest()
        {
            int companyId = 2;
            var response = instance.Object.GetPriceLists(companyId);
            JObject obj = JObject.Parse(getPriceListsResponseBody);

            Assert.True(JToken.DeepEquals(obj, JObject.FromObject(response)));
        }
    }
}
