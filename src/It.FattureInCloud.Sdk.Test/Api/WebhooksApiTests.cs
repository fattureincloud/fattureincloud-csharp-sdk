/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.27
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing WebhooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WebhooksApiTests : IDisposable
    {
        private WebhooksApi instance;

        public WebhooksApiTests()
        {
            instance = new WebhooksApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WebhooksApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WebhooksApi
            //Assert.IsType<WebhooksApi>(instance);
        }

        /// <summary>
        /// Test CreateWebhooksSubscription
        /// </summary>
        [Fact]
        public void CreateWebhooksSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //CreateWebhooksSubscriptionRequest createWebhooksSubscriptionRequest = null;
            //var response = instance.CreateWebhooksSubscription(companyId, createWebhooksSubscriptionRequest);
            //Assert.IsType<CreateWebhooksSubscriptionResponse>(response);
        }

        /// <summary>
        /// Test DeleteWebhooksSubscription
        /// </summary>
        [Fact]
        public void DeleteWebhooksSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string subscriptionId = null;
            //instance.DeleteWebhooksSubscription(companyId, subscriptionId);
        }

        /// <summary>
        /// Test GetWebhooksSubscription
        /// </summary>
        [Fact]
        public void GetWebhooksSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string subscriptionId = null;
            //var response = instance.GetWebhooksSubscription(companyId, subscriptionId);
            //Assert.IsType<GetWebhooksSubscriptionResponse>(response);
        }

        /// <summary>
        /// Test ListWebhooksSubscriptions
        /// </summary>
        [Fact]
        public void ListWebhooksSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //var response = instance.ListWebhooksSubscriptions(companyId);
            //Assert.IsType<ListWebhooksSubscriptionsResponse>(response);
        }

        /// <summary>
        /// Test ModifyWebhooksSubscription
        /// </summary>
        [Fact]
        public void ModifyWebhooksSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string subscriptionId = null;
            //ModifyWebhooksSubscriptionRequest modifyWebhooksSubscriptionRequest = null;
            //var response = instance.ModifyWebhooksSubscription(companyId, subscriptionId, modifyWebhooksSubscriptionRequest);
            //Assert.IsType<ModifyWebhooksSubscriptionResponse>(response);
        }
    }
}
