/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing SuppliersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SuppliersApiTests : IDisposable
    {
        private SuppliersApi instance;

        public SuppliersApiTests()
        {
            instance = new SuppliersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SuppliersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SuppliersApi
            //Assert.IsType<SuppliersApi>(instance);
        }

        /// <summary>
        /// Test CreateSupplier
        /// </summary>
        [Fact]
        public void CreateSupplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //CreateSupplierRequest createSupplierRequest = null;
            //var response = instance.CreateSupplier(companyId, createSupplierRequest);
            //Assert.IsType<CreateSupplierResponse>(response);
        }

        /// <summary>
        /// Test DeleteSupplier
        /// </summary>
        [Fact]
        public void DeleteSupplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int supplierId = null;
            //instance.DeleteSupplier(companyId, supplierId);
        }

        /// <summary>
        /// Test GetSupplier
        /// </summary>
        [Fact]
        public void GetSupplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int supplierId = null;
            //string fields = null;
            //string fieldset = null;
            //var response = instance.GetSupplier(companyId, supplierId, fields, fieldset);
            //Assert.IsType<GetSupplierResponse>(response);
        }

        /// <summary>
        /// Test ListSuppliers
        /// </summary>
        [Fact]
        public void ListSuppliersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string fields = null;
            //string fieldset = null;
            //string sort = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListSuppliers(companyId, fields, fieldset, sort, page, perPage);
            //Assert.IsType<ListSuppliersResponse>(response);
        }

        /// <summary>
        /// Test ModifySupplier
        /// </summary>
        [Fact]
        public void ModifySupplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int supplierId = null;
            //ModifySupplierRequest modifySupplierRequest = null;
            //var response = instance.ModifySupplier(companyId, supplierId, modifySupplierRequest);
            //Assert.IsType<ModifySupplierResponse>(response);
        }
    }
}
