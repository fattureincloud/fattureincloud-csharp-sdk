/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.3
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using It.FattureInCloud.Sdk.Client;
using It.FattureInCloud.Sdk.Api;
// uncomment below to import models
//using It.FattureInCloud.Sdk.Model;

namespace It.FattureInCloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing IssuedDocumentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IssuedDocumentsApiTests : IDisposable
    {
        private IssuedDocumentsApi instance;

        public IssuedDocumentsApiTests()
        {
            instance = new IssuedDocumentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IssuedDocumentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IssuedDocumentsApi
            //Assert.IsType<IssuedDocumentsApi>(instance);
        }

        /// <summary>
        /// Test CreateIssuedDocument
        /// </summary>
        [Fact]
        public void CreateIssuedDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //CreateIssuedDocumentRequest createIssuedDocumentRequest = null;
            //var response = instance.CreateIssuedDocument(companyId, createIssuedDocumentRequest);
            //Assert.IsType<CreateIssuedDocumentResponse>(response);
        }

        /// <summary>
        /// Test DeleteIssuedDocument
        /// </summary>
        [Fact]
        public void DeleteIssuedDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //instance.DeleteIssuedDocument(companyId, documentId);
        }

        /// <summary>
        /// Test DeleteIssuedDocumentAttachment
        /// </summary>
        [Fact]
        public void DeleteIssuedDocumentAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //instance.DeleteIssuedDocumentAttachment(companyId, documentId);
        }

        /// <summary>
        /// Test GetEmailData
        /// </summary>
        [Fact]
        public void GetEmailDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //var response = instance.GetEmailData(companyId, documentId);
            //Assert.IsType<GetEmailDataResponse>(response);
        }

        /// <summary>
        /// Test GetExistingIssuedDocumentTotals
        /// </summary>
        [Fact]
        public void GetExistingIssuedDocumentTotalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //GetExistingIssuedDocumentTotalsRequest getExistingIssuedDocumentTotalsRequest = null;
            //var response = instance.GetExistingIssuedDocumentTotals(companyId, documentId, getExistingIssuedDocumentTotalsRequest);
            //Assert.IsType<GetExistingIssuedDocumentTotalsResponse>(response);
        }

        /// <summary>
        /// Test GetIssuedDocument
        /// </summary>
        [Fact]
        public void GetIssuedDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //string fields = null;
            //string fieldset = null;
            //var response = instance.GetIssuedDocument(companyId, documentId, fields, fieldset);
            //Assert.IsType<GetIssuedDocumentResponse>(response);
        }

        /// <summary>
        /// Test GetIssuedDocumentPreCreateInfo
        /// </summary>
        [Fact]
        public void GetIssuedDocumentPreCreateInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string type = null;
            //var response = instance.GetIssuedDocumentPreCreateInfo(companyId, type);
            //Assert.IsType<GetIssuedDocumentPreCreateInfoResponse>(response);
        }

        /// <summary>
        /// Test GetNewIssuedDocumentTotals
        /// </summary>
        [Fact]
        public void GetNewIssuedDocumentTotalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //GetNewIssuedDocumentTotalsRequest getNewIssuedDocumentTotalsRequest = null;
            //var response = instance.GetNewIssuedDocumentTotals(companyId, getNewIssuedDocumentTotalsRequest);
            //Assert.IsType<GetNewIssuedDocumentTotalsResponse>(response);
        }

        /// <summary>
        /// Test ListIssuedDocuments
        /// </summary>
        [Fact]
        public void ListIssuedDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string type = null;
            //string fields = null;
            //string fieldset = null;
            //string sort = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListIssuedDocuments(companyId, type, fields, fieldset, sort, page, perPage);
            //Assert.IsType<ListIssuedDocumentsResponse>(response);
        }

        /// <summary>
        /// Test ModifyIssuedDocument
        /// </summary>
        [Fact]
        public void ModifyIssuedDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //ModifyIssuedDocumentRequest modifyIssuedDocumentRequest = null;
            //var response = instance.ModifyIssuedDocument(companyId, documentId, modifyIssuedDocumentRequest);
            //Assert.IsType<ModifyIssuedDocumentResponse>(response);
        }

        /// <summary>
        /// Test ScheduleEmail
        /// </summary>
        [Fact]
        public void ScheduleEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //int documentId = null;
            //ScheduleEmailRequest scheduleEmailRequest = null;
            //instance.ScheduleEmail(companyId, documentId, scheduleEmailRequest);
        }

        /// <summary>
        /// Test UploadIssuedDocumentAttachment
        /// </summary>
        [Fact]
        public void UploadIssuedDocumentAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int companyId = null;
            //string filename = null;
            //System.IO.Stream attachment = null;
            //var response = instance.UploadIssuedDocumentAttachment(companyId, filename, attachment);
            //Assert.IsType<UploadIssuedDocumentAttachmentResponse>(response);
        }
    }
}
