/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using It.FattureInCloud.Sdk.Api;
using It.FattureInCloud.Sdk.Model;
using It.FattureInCloud.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace It.FattureInCloud.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing IssuedDocumentTotals
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IssuedDocumentTotalsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IssuedDocumentTotals
        //private IssuedDocumentTotals instance;

        public IssuedDocumentTotalsTests()
        {
            // TODO uncomment below to create an instance of IssuedDocumentTotals
            //instance = new IssuedDocumentTotals();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IssuedDocumentTotals
        /// </summary>
        [Fact]
        public void IssuedDocumentTotalsInstanceTest()
        {
            // TODO uncomment below to test "IsType" IssuedDocumentTotals
            //Assert.IsType<IssuedDocumentTotals>(instance);
        }


        /// <summary>
        /// Test the property 'AmountNet'
        /// </summary>
        [Fact]
        public void AmountNetTest()
        {
            // TODO unit test for the property 'AmountNet'
        }
        /// <summary>
        /// Test the property 'AmountRivalsa'
        /// </summary>
        [Fact]
        public void AmountRivalsaTest()
        {
            // TODO unit test for the property 'AmountRivalsa'
        }
        /// <summary>
        /// Test the property 'AmountNetWithRivalsa'
        /// </summary>
        [Fact]
        public void AmountNetWithRivalsaTest()
        {
            // TODO unit test for the property 'AmountNetWithRivalsa'
        }
        /// <summary>
        /// Test the property 'AmountCassa'
        /// </summary>
        [Fact]
        public void AmountCassaTest()
        {
            // TODO unit test for the property 'AmountCassa'
        }
        /// <summary>
        /// Test the property 'TaxableAmount'
        /// </summary>
        [Fact]
        public void TaxableAmountTest()
        {
            // TODO unit test for the property 'TaxableAmount'
        }
        /// <summary>
        /// Test the property 'NotTaxableAmount'
        /// </summary>
        [Fact]
        public void NotTaxableAmountTest()
        {
            // TODO unit test for the property 'NotTaxableAmount'
        }
        /// <summary>
        /// Test the property 'AmountVat'
        /// </summary>
        [Fact]
        public void AmountVatTest()
        {
            // TODO unit test for the property 'AmountVat'
        }
        /// <summary>
        /// Test the property 'AmountGross'
        /// </summary>
        [Fact]
        public void AmountGrossTest()
        {
            // TODO unit test for the property 'AmountGross'
        }
        /// <summary>
        /// Test the property 'TaxableAmountWithholdingTax'
        /// </summary>
        [Fact]
        public void TaxableAmountWithholdingTaxTest()
        {
            // TODO unit test for the property 'TaxableAmountWithholdingTax'
        }
        /// <summary>
        /// Test the property 'AmountWithholdingTax'
        /// </summary>
        [Fact]
        public void AmountWithholdingTaxTest()
        {
            // TODO unit test for the property 'AmountWithholdingTax'
        }
        /// <summary>
        /// Test the property 'TaxableAmountOtherWithholdingTax'
        /// </summary>
        [Fact]
        public void TaxableAmountOtherWithholdingTaxTest()
        {
            // TODO unit test for the property 'TaxableAmountOtherWithholdingTax'
        }
        /// <summary>
        /// Test the property 'AmountOtherWithholdingTax'
        /// </summary>
        [Fact]
        public void AmountOtherWithholdingTaxTest()
        {
            // TODO unit test for the property 'AmountOtherWithholdingTax'
        }
        /// <summary>
        /// Test the property 'StampDuty'
        /// </summary>
        [Fact]
        public void StampDutyTest()
        {
            // TODO unit test for the property 'StampDuty'
        }
        /// <summary>
        /// Test the property 'AmountDue'
        /// </summary>
        [Fact]
        public void AmountDueTest()
        {
            // TODO unit test for the property 'AmountDue'
        }
        /// <summary>
        /// Test the property 'IsEnasarcoMaximalExceeded'
        /// </summary>
        [Fact]
        public void IsEnasarcoMaximalExceededTest()
        {
            // TODO unit test for the property 'IsEnasarcoMaximalExceeded'
        }
        /// <summary>
        /// Test the property 'PaymentsSum'
        /// </summary>
        [Fact]
        public void PaymentsSumTest()
        {
            // TODO unit test for the property 'PaymentsSum'
        }
        /// <summary>
        /// Test the property 'VatList'
        /// </summary>
        [Fact]
        public void VatListTest()
        {
            // TODO unit test for the property 'VatList'
        }

    }

}
